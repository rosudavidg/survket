version: "3.1"
services:
  frontend:
    # image: rosudavidg/survket-frontend:latest
    image: survket_frontend
    volumes:
      - "./frontend/.:/app"
      - "/app/node_modules"
    ports:
      - 3001:3000
    environment:
      CHOKIDAR_USEPOLLING: "true"
      REACT_APP_BACKEND_HOST: backend
      REACT_APP_BACKEND_PORT: 5000
    stdin_open: true
    networks:
      - webnetwork
  backend:
    # image: rosudavidg/survket-backend:latest
    image: survket_backend
    depends_on:
      - database
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
      restart_policy:
        condition: on-failure
    # Pentru testare
    ports:
      - "8888:5000"
    environment:
      EMAIL_HOST: email
      EMAIL_PORT: 5000
      DATABASE_USER: /run/secrets/secret_database_user
      DATABASE_HOST: database
      DATABASE_NAME: /run/secrets/secret_database_db
      DATABASE_PASSWORD: /run/secrets/secret_database_password
      DATABASE_PORT: 5432
      JWT_ISSUER: survket_backend
      JWT_SUBJECT: Authentication token
      JWT_AUDIENCE: survket_frontend
      JWT_EXPIRESIN: 1w
      # TODO: docker secrets
      JWT_SECRET_KEY: myawesomeultrasecretkey
    secrets:
      - secret_database_user
      - secret_database_password
      - secret_database_db
    networks:
      - webnetwork
    volumes:
      - ./backend/:/usr/src/app
  database:
    # image: rosudavidg/survket-database:latest
    image: survket_database
    environment:
      POSTGRES_USER_FILE: /run/secrets/secret_database_user
      POSTGRES_PASSWORD_FILE: /run/secrets/secret_database_password
      POSTGRES_DB_FILE: /run/secrets/secret_database_db
    secrets:
      - secret_database_user
      - secret_database_password
      - secret_database_db
    volumes:
      - volume_database:/var/lib/postgresql/data
    # Pentru testare
    ports:
      - "54321:5432"
    networks:
      - webnetwork
  email:
    # image: rosudavidg/survket-email:latest
    image: survket_email
    environment:
      EMAIL_ADDRESS: /run/secrets/secret_email_address
      EMAIL_PASSWORD: /run/secrets/secret_email_password
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "0.2"
          memory: 50M
      restart_policy:
        condition: on-failure
    secrets:
      - secret_email_address
      - secret_email_password
    networks:
      - webnetwork
  grafana:
    image: grafana/grafana:6.6.2
    depends_on:
      - database
    ports:
      - "30009:3000"
    volumes:
      - volume_grafana:/var/lib/grafana
    environment:
      GRAFANA_DB_HOST: database:5432
      GRAFANA_USERNAME: /run/secrets/secret_database_user
      GRAFANA_PASSWORD: /run/secrets/secret_database_password
      GRAFANA_DB_NAME: /run/secrets/secret_database_db
      GF_SECURITY_ADMIN_PASSWORD_FILE: /run/secrets/admin.pwd
    networks:
      - webnetwork
    secrets:
      - source: secret_grafana_password
        target: /run/secrets/admin.pwd
        mode: 0444
      - secret_database_user
      - secret_database_password
      - secret_database_db
volumes:
  volume_database:
  volume_grafana:
networks:
  webnetwork:
secrets:
  secret_email_address:
    file: ./secrets/secret_email_address
  secret_email_password:
    file: ./secrets/secret_email_password
  secret_database_password:
    file: ./secrets/secret_database_password
  secret_database_user:
    file: ./secrets/secret_database_user
  secret_database_db:
    file: ./secrets/secret_database_db
  secret_grafana_password:
    file: ./secrets/secret_grafana_password
